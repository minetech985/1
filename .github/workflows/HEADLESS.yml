name: Windows RDP V3 Patched

on:
  workflow_dispatch:
    inputs:
      ts_tailnet:
        description: "Tailscale tailnet (e.g. you@gmail.com)"
        required: true
      ts_api_key:
        description: "Tailscale API key (device admin, no 'Bearer')"
        required: true
      ts_authkey:
        description: "Tailscale auth key (reusable or ephemeral)"
        required: true
      gh_api_token:
        description: "GitHub Personal Access Token (classic; scopes: repo, workflow)"
        required: true
      zerotier_network:
        description: "ZeroTier Network ID"
        required: true
        default: "4753cf475fd1d946"
      rdp_password:
        description: "Password for runneradmin"
        required: true
        default: "TK#12345"
      firefox_url:
        description: "URL to Firefox Portable zip (Dropbox/MEGA/etc)"
        required: true
        default: "https://www.dropbox.com/scl/fo/9n644cwuq4gpw6123dpph/AJvMFsxMkDWK_0FYWDjzJE8?rlkey=i6k3lpcz6t5k0pfaf7h6co8g2&st=mugwmea9&dl=0"
      test_mode:
        description: "Run 5-minute test loop"
        type: boolean
        default: false
      runtime_minutes:
        description: "Runtime in minutes (max 360; capped to 355)"
        required: false
        default: "355"
      loops:
        description: "How many handoffs (0 = infinite)"
        required: false
        default: "0"

concurrency:
  group: tailscale-rdp-singleton
  cancel-in-progress: false

permissions:
  contents: read
  actions: write

defaults:
  run:
    shell: pwsh

env:
  RDP_USER: runneradmin
  TS_HOSTNAME: bullet

jobs:
  rdp:
    runs-on: windows-2022
    timeout-minutes: 370
    steps:

      # ===================== Resolve inputs =====================
      - name: üîß Resolve inputs
        id: cfg
        run: |
          function ToIntOr($v, $def) {
            if ("$v" -match '^\d+$') { [int]$v } else { [int]$def }
          }

          $tailnet  = "${{ inputs.ts_tailnet }}"
          $apiKey   = "${{ inputs.ts_api_key }}"
          $authKey  = "${{ inputs.ts_authkey }}"
          $pat      = "${{ inputs.gh_api_token }}"
          $ztNet    = "${{ inputs.zerotier_network }}"
          $rdpPass  = "${{ inputs.rdp_password }}"
          $firefox  = "${{ inputs.firefox_url }}"
          $isTest   = ("${{ inputs.test_mode }}" -match '^(?i:true|1|yes|on)$')
          $runtime  = ToIntOr "${{ inputs.runtime_minutes }}" 355
          if ($isTest) { $runtime = 5 }
          if (-not $isTest -and $runtime -lt 6) { $runtime = 355 }
          if ($runtime -gt 360) { $runtime = 355 }
          $loops = ToIntOr "${{ inputs.loops }}" 0
          if ($loops -lt 0) { $loops = 0 }

          "tailnet=$tailnet"      | Out-File -Append $env:GITHUB_OUTPUT
          "apikey=$apiKey"        | Out-File -Append $env:GITHUB_OUTPUT
          "authkey=$authKey"      | Out-File -Append $env:GITHUB_OUTPUT
          "pat=$pat"              | Out-File -Append $env:GITHUB_OUTPUT
          "zerotier=$ztNet"       | Out-File -Append $env:GITHUB_OUTPUT
          "rdpPass=$rdpPass"      | Out-File -Append $env:GITHUB_OUTPUT
          "firefox_url=$firefox"  | Out-File -Append $env:GITHUB_OUTPUT
          "runtime=$runtime"      | Out-File -Append $env:GITHUB_OUTPUT
          "loops=$loops"          | Out-File -Append $env:GITHUB_OUTPUT

          Write-Host "Resolved: runtime=$runtime, loops=$loops"

      # ===================== Install Tailscale =====================
      - name: ‚öôÔ∏è Install Tailscale
        run: |
          $exe = "C:\Program Files\Tailscale\tailscale.exe"
          if (-not (Test-Path $exe)) {
            $url = 'https://pkgs.tailscale.com/stable/tailscale-setup-latest.exe'
            $dst = "$env:TEMP\tailscale-setup.exe"
            Invoke-WebRequest -Uri $url -OutFile $dst -UseBasicParsing
            Start-Process -FilePath $dst -ArgumentList "/quiet" -Wait
          }
          Start-Service Tailscale -ErrorAction SilentlyContinue
          & "C:\Program Files\Tailscale\tailscale.exe" version

      # ===================== Setup RDP =====================
      - name: üîê Setup RDP
        run: |
          $u="${{ env.RDP_USER }}"; $p="${{ steps.cfg.outputs.rdpPass }}"
          $sec = ConvertTo-SecureString $p -AsPlainText -Force
          Set-LocalUser -Name $u -Password $sec -AccountNeverExpires
          Enable-LocalUser -Name $u
          Add-LocalGroupMember -Group Administrators -Member $u -ErrorAction SilentlyContinue
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member $u -ErrorAction SilentlyContinue
          Set-ItemProperty "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name fDenyTSConnections -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop" | Out-Null

      # ===================== Tailscale up =====================
      - name: üîó Tailscale up
        run: |
          $ts = "C:\Program Files\Tailscale\tailscale.exe"
          & $ts logout | Out-Null
          & $ts up --authkey "${{ steps.cfg.outputs.authkey }}" --hostname "${{ env.TS_HOSTNAME }}" --accept-routes --accept-dns=false
          Start-Sleep -Seconds 2
          $ip4 = (& $ts ip -4 | Select-Object -First 1)
          Write-Host "### RDP Info ###"
          Write-Host "User: $env:RDP_USER"
          Write-Host "Pass: ${{ steps.cfg.outputs.rdpPass }}"
          Write-Host "Host: $env:TS_HOSTNAME"
          Write-Host "IP: $ip4"

      # ===================== Install ZeroTier =====================
      - name: üåê Install ZeroTier
        run: |
          $ztExe = "C:\ProgramData\ZeroTier\One\zerotier-one_x64.exe"
          if (-not (Test-Path $ztExe)) {
            Write-Host "Downloading ZeroTier..."
            $url = "https://download.zerotier.com/dist/ZeroTierOne.msi"
            $msi = "$env:TEMP\ZeroTierOne.msi"
            Invoke-WebRequest -Uri $url -OutFile $msi -UseBasicParsing
            Start-Process msiexec.exe -ArgumentList "/i `"$msi`" /quiet /qn /norestart" -Wait
          }
          Start-Process -FilePath $ztExe -ArgumentList "-C" -WindowStyle Hidden
          Start-Sleep -Seconds 5
          & $ztExe -q join ${{ steps.cfg.outputs.zerotier }}
          & $ztExe -q listnetworks

                  # ===================== Download & Extract Firefox Portable =====================
      - name: üì• Download Firefox Portable
        shell: pwsh
        run: |
          $zip  = "$env:TEMP\FirefoxPortable.zip"
          $dst  = "$env:USERPROFILE\Downloads"
          $ffDir = "$dst\FirefoxPortable"

          if (Test-Path $ffDir) { Remove-Item -Recurse -Force $ffDir }
          if (Test-Path $zip)   { Remove-Item -Force $zip }

          $url = "https://www.dropbox.com/scl/fo/9n644cwuq4gpw6123dpph/AJvMFsxMkDWK_0FYWDjzJE8?rlkey=i6k3lpcz6t5k0pfaf7h6co8g2&st=mugwmea9&dl=1"
          Invoke-WebRequest -Uri $url -OutFile $zip -UseBasicParsing

          Expand-Archive -Path $zip -DestinationPath $dst -Force

          Write-Host "Extracted contents:"
          Get-ChildItem -Recurse $dst | Select-Object FullName



      # ===================== Launch Firefox Portable =====================
      - name: üöÄ Launch Firefox Portable
        run: |
          $ffExe = "$env:USERPROFILE\Downloads\FirefoxPortable\FirefoxPortable.exe"
          if (-not (Test-Path $ffExe)) {
            Write-Error "FirefoxPortable.exe not found!"
            exit 1
          }
          $proc = Start-Process -FilePath $ffExe -ArgumentList "-no-remote" -WindowStyle Normal -PassThru
          Start-Sleep -Seconds 2
          try {
            $proc.PriorityClass = [System.Diagnostics.ProcessPriorityClass]::BelowNormal
            Write-Host "FirefoxPortable started with BelowNormal priority."
          } catch {
            Write-Warning "Could not adjust priority: $_"
          }

      # ===================== Keep Alive =====================
      - name: ‚è≥ Keep alive
        run: |
          $mins=[int]"${{ steps.cfg.outputs.runtime }}"
          $end=(Get-Date).AddMinutes($mins)
          while((Get-Date) -lt $end){
            $left=[int]([math]::Ceiling(($end-(Get-Date)).TotalMinutes))
            Write-Host "RDP alive... ($left min left)"
            Start-Sleep -Seconds 60
          }
